{"version":3,"file":"static/js/839.aa32aacd.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","pages/ReviewsPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding-left: 100px`;\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p`\n  font-size: 15px;\n  font-weight: 500`;\n\nexport const ReviewContent = styled.span`\n  display: block;\n  margin: 10px;\n  font-size: 12px;`;\n\nexport const NoReviewText = styled.p`\nmargin-left: 100px`;\n","import propTypes from 'prop-types';\nimport { ReviewsList, Item, Author, ReviewContent } from './Reviews.styled';\n\nexport default function Reviews({ reviews }) {\n  return (\n    <>\n      <ReviewsList>\n        {reviews.map(({ author, review, id }) => (\n          <Item key={id}>\n            <Author>\n              {author}:\n              <ReviewContent>\"{review}\"</ReviewContent>\n            </Author>\n          </Item>\n        ))}\n      </ReviewsList>\n    </>\n  );\n}\nReviews.propTypes = {\n  reviews: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      author: propTypes.string,\n      review: propTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/api';\nimport Reviews from 'components/Reviews/Reviews';\nimport { NoReviewText } from 'components/Reviews/Reviews.styled';\n\nexport default function ReviewsPage() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(all => {\n      const mappedReviews = [];\n      all.results.map(({ author, content, id }) => {\n        const authorReview = {\n          id: id,\n          author: author,\n          review: content,\n        };\n        return mappedReviews.push(authorReview);\n      });\n      setReviews(mappedReviews);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <Reviews reviews={reviews} />\n  ) : (\n    <NoReviewText>We don't have any reviews for this movie.</NoReviewText>\n  );\n}\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '992e567e43c913ea6cedbae9c8870c1e';\n\nasync function fetchMoviesBySearch(query) {\n  const url = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(response => response.data);\n}\n\nasync function fetchTrendingMovies() {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n}\n\nasync function fetchMovieDetails(movieId) {\n  const detailsURL = `${URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nasync function fetchMovieCast(movieId) {\n  const castURL = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nasync function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}\n\nexport {\n  fetchMoviesBySearch,\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n};\n"],"names":["ReviewsList","styled","Item","Author","ReviewContent","NoReviewText","Reviews","reviews","map","author","review","id","ReviewsPage","useState","setReviews","movieId","useParams","useEffect","fetchMoviesReviews","then","all","mappedReviews","results","content","authorReview","push","length","URL","KEY","fetchMoviesBySearch","query","url","axios","response","data","fetchTrendingMovies","trendingURL","fetchMovieDetails","detailsURL","fetchMovieCast","castURL","reviewsURL"],"sourceRoot":""}