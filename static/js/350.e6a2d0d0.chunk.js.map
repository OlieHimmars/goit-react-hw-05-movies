{"version":3,"file":"static/js/350.e6a2d0d0.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","pages/MoviesPage.js","services/api.js","utils/mapper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0 20px;\n  margin: 0;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 100px;\n  font-size: 30px;\n  font-weight: 700;\n`;","import styled from 'styled-components';\n\nexport const Item = styled.li`\npadding:10px;\n`;\nexport const Info = styled.div`\n  margin-bottom: 10px;\n`;\nexport const Title = styled.h2`\n  font-size: 12px;\n  font-weight: 700;\n`;\n","import propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, Info, Title } from './MoviesListItem.styled';\n\nfunction MoviesListItem({ id, title }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location.pathname + location.search }}\n      >\n        <Info>\n          <Title>{title ? title : 'No Title'}</Title>\n        </Info>\n      </Link>\n    </Item>\n  );\n}\nMoviesListItem.propTypes = {\n  id: propTypes.number.isRequired,\n  title: propTypes.string.isRequired,\n};\nexport default MoviesListItem;\n","import propTypes from 'prop-types';\nimport { List, Title } from './MoviesList.styled';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <>\n      <Title>Trending today</Title>\n    \n    <List>\n      {movies.map(({ id, original_title }) => {\n        return (\n          <MoviesListItem\n            key={id}\n            id={id}\n            title={original_title}\n          />\n        );\n      })}\n    </List>\n    </>\n  );\n};\n\n\nexport const SearchMoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return (\n          <MoviesListItem\n            key={id}\n            id={id}\n            title={original_title}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string.isRequired,\n    })\n  ),\n};\n\nSearchMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  margin: 100px auto 0;\n  \n  width: 100%;\n  max-width: 500px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 25px;\n  height: 25px;\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n  outline: none;\n`;\nexport const SearchSvg = styled(FcSearch)`\n  width: 15px;\n  height: 15px;\n  fill: black;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 25px;\n  padding: 10px 10px 0 10px;\n  font-size: 20px;\n  border: none;\n  border-bottom: 0.5px solid #00000073;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'services/api';\nimport {\n  Form,\n  Button,\n  SearchSvg,\n  Input,\n} from '../components/Searchbar/Searchbar.styled.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { SearchMoviesList } from 'components/MoviesList/MoviesList';\nimport { mapper } from 'utils/mapper';\n\nexport default function MoviesPage() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n\n  const onChangeQuery = e => {\n    setSearchQuery(e.target.value);\n  };\n  const resetForm = () => {\n    setSearchQuery('');\n  };\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newQuery = e.target.elements.query.value.toLowerCase();\n    // console.log(newQuery);\n    if (newQuery.trim() === '') {\n      toast.error('Please, enter correct movies name');\n      return;\n    }\n    setSearchParams({ query: newQuery });\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      fetchMoviesBySearch(newQuery).then(r => {\n        const mappedMovies = mapper(r.results);\n        setMovies(mappedMovies);\n        resetForm();\n      });\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Toaster />\n      <Form onSubmit={onFormSubmit}>\n        <Button type=\"submit\">\n          <span>\n            <SearchSvg />\n          </span>\n        </Button>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          onChange={onChangeQuery}\n        ></Input>\n      </Form>\n\n      {movies && <SearchMoviesList movies={movies} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '992e567e43c913ea6cedbae9c8870c1e';\n\nasync function fetchMoviesBySearch(query) {\n  const url = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(response => response.data);\n}\n\nasync function fetchTrendingMovies() {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n}\n\nasync function fetchMovieDetails(movieId) {\n  const detailsURL = `${URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nasync function fetchMovieCast(movieId) {\n  const castURL = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nasync function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}\n\nexport {\n  fetchMoviesBySearch,\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n};\n","export const mapper = data => {\n  return data.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n};\n"],"names":["List","styled","Title","Item","Info","id","title","location","useLocation","to","state","from","pathname","search","MoviesList","movies","map","original_title","SearchMoviesList","Form","Button","SearchSvg","FcSearch","Input","MoviesPage","useState","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","setMovies","useEffect","get","newQuery","fetchMoviesBySearch","then","r","mappedMovies","mapper","results","onSubmit","e","preventDefault","target","elements","query","value","toLowerCase","trim","toast","type","name","onChange","URL","KEY","url","axios","response","data","fetchTrendingMovies","trendingURL","fetchMovieDetails","movieId","detailsURL","fetchMovieCast","castURL","fetchMoviesReviews","reviewsURL"],"sourceRoot":""}